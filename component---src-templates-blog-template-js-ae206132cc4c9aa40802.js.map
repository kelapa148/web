{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js"],"names":["Template","data","site","markdownRemark","siteMetadata","frontmatter","html","title","description","metaDescription","slug","path","ogImage","thumbnail","author","className","date","style","backgroundImage","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,gGAKe,SAASA,EAAT,GAEX,IADFC,EACC,EADDA,KAEQC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,eACNC,EAAiBF,EAAjBE,aACAC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAUF,EAAYE,MAAjB,MAA4BH,EAAaG,MAC9CC,YAAaH,EAAYI,gBACzBC,KAAML,EAAYM,KAClBC,QAASP,EAAYQ,UACrBC,OAAQT,EAAYS,SAEtB,yBAAKC,UAAU,uBACb,6BAASA,UAAU,SACfV,EAAYQ,WACZ,yBAAKE,UAAU,kBACb,wBAAIA,UAAU,cAAcV,EAAYE,OACxC,yBAAKQ,UAAU,aAAaV,EAAYW,KAAxC,MAAiDX,EAAYS,WAG9DT,EAAYQ,WACb,yBAAKE,UAAU,iBAAiBE,MAAO,CAACC,gBAAgB,OAAQb,EAAYQ,UAArB,MACrD,wBAAIE,UAAU,cAAcV,EAAYE,OACxC,yBAAKQ,UAAU,aAAaV,EAAYW,KAAxC,MAAiDX,EAAYS,SAGjE,yBACEC,UAAU,oBACVI,wBAAyB,CAAEC,OAAQd","file":"component---src-templates-blog-template-js-ae206132cc4c9aa40802.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport HelmetWrapper from \"../components/helmetWrapper\";\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { site, markdownRemark } = data // data.markdownRemark holds your post data\n  const { siteMetadata } = site\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <HelmetWrapper\n        title={`${frontmatter.title} | ${siteMetadata.title}`}\n        description={frontmatter.metaDescription}\n        slug={frontmatter.path}\n        ogImage={frontmatter.thumbnail}\n        author={frontmatter.author}\n      />\n      <div className=\"blog-post-container\">\n        <article className=\"post\">\n          {!frontmatter.thumbnail && (\n            <div className=\"post-thumbnail\">\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\n              <div className=\"post-meta\">{frontmatter.date} - {frontmatter.author}</div>\n            </div>\n          )}\n          {!!frontmatter.thumbnail && (\n            <div className=\"post-thumbnail\" style={{backgroundImage: `url(${frontmatter.thumbnail})`}}>\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\n              <div className=\"post-meta\">{frontmatter.date} - {frontmatter.author}</div>\n            </div>\n          )}\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        thumbnail\n        metaDescription\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}